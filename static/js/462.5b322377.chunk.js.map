{"version":3,"file":"static/js/462.5b322377.chunk.js","mappings":"wRAmGA,UAvFqB,WAAO,IAAD,MACnBA,GAAWC,EAAAA,EAAAA,eAEjB,GAKIC,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MASF,OACE,SAAC,IAAD,WACE,UAAC,IAAD,CAAKC,SAAS,QAAQC,QAAQ,OAAOC,cAAc,SAASC,QAAS,EAArE,WACE,SAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,+BAIA,UAAC,IAAD,CAAMC,aAAa,KAAKC,YAAU,EAACC,SAAUZ,GAblC,SAAAa,GACfC,QAAQC,IAAI,mBAAoBC,KAAKC,UAAUJ,IAC/CjB,GAASsB,EAAAA,EAAAA,IAAaL,IACtBV,GACD,IASK,WACE,SAAC,KAAD,gBACEgB,UAAQ,EACRC,GAAG,OACHC,MAAM,YACNb,QAAQ,WACRc,WAAW,GACPvB,EAAS,OAAQ,CACnBoB,SAAU,CACRI,OAAO,EACPC,QAASC,EAAAA,GAAAA,eATf,IAYEC,QAASzB,EAAO0B,KAChBC,WAAU,UAAE3B,EAAO0B,YAAT,aAAE,EAAaH,YAE3B,SAAC,KAAD,gBACEL,UAAQ,EACRC,GAAG,QACHS,KAAK,QACLR,MAAM,SACNb,QAAQ,WACRc,WAAW,GACPvB,EAAS,QAAS,CACpBoB,SAAU,CACRI,OAAO,EACPC,QAASC,EAAAA,GAAAA,YAEXK,QAAS,CACPP,MACE,wEACFC,QAASC,EAAAA,GAAAA,eAff,IAkBEC,QAASzB,EAAO8B,MAChBH,WAAU,UAAE3B,EAAO8B,aAAT,aAAE,EAAcP,YAE5B,SAAC,KAAD,gBACEL,UAAQ,EACRC,GAAG,WACHS,KAAK,WACLR,MAAM,WACNb,QAAQ,WACRc,WAAW,GACPvB,EAAS,WAAY,CACvBoB,SAAU,CACRI,OAAO,EACPC,QAASC,EAAAA,GAAAA,eAVf,IAaEC,QAASzB,EAAO+B,SAChBJ,WAAU,UAAE3B,EAAO+B,gBAAT,aAAE,EAAiBR,YAE/B,SAAC,IAAD,CAAQK,KAAK,SAASP,WAAW,EAAMd,QAAQ,YAA/C,kCAOT,C,wFC3ED,EAhBa,SAAC,GAA0C,IAAxCyB,EAAuC,EAAvCA,SAAUvB,EAA6B,EAA7BA,aAAcE,EAAe,EAAfA,SACtC,OACE,iBAAMA,SAAUA,EAAUF,aAAcA,EAAxC,UACE,SAACwB,EAAA,EAAD,CAAK7B,QAAQ,OAAOC,cAAc,SAASC,QAAS,EAApD,SACG0B,KAIR,C,wFCTYE,EAAgB,SAAC,GAAkB,IAAhBF,EAAe,EAAfA,SAC9B,OACE,SAAC,IAAD,CACEG,MAAM,QACNC,OAAO,QACPhC,QAAQ,OACRiC,WAAW,SACXC,eAAe,SALjB,SAOGN,GAGN,C","sources":["Pages/RegisterPage.jsx","components/Form/Form.jsx","components/common/PageContainer.jsx"],"sourcesContent":["import { Button, TextField, Typography } from '@mui/material';\nimport { Box } from 'components/Box';\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { messages } from 'components/settings/settings';\nimport { PageContainer } from 'components/common/PageContainer';\nimport Form from 'components/Form';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/auth/auth.operations';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log('user to register', JSON.stringify(data));\n    dispatch(registerUser(data));\n    reset();\n  };\n\n  return (\n    <PageContainer>\n      <Box minWidth=\"280px\" display=\"flex\" flexDirection=\"column\" gridGap={4}>\n        <Typography variant=\"h2\" component=\"h2\">\n          Register, please\n        </Typography>\n\n        <Form autoComplete=\"on\" noValidate onSubmit={handleSubmit(onSubmit)}>\n          <TextField\n            required\n            id=\"name\"\n            label=\"User name\"\n            variant=\"standard\"\n            fullWidth={true}\n            {...register('name', {\n              required: {\n                value: true,\n                message: messages.isRequired,\n              },\n            })}\n            error={!!errors.name}\n            helperText={errors.name?.message}\n          />\n          <TextField\n            required\n            id=\"email\"\n            type=\"email\"\n            label=\"E-mail\"\n            variant=\"standard\"\n            fullWidth={true}\n            {...register('email', {\n              required: {\n                value: true,\n                message: messages.isRequired,\n              },\n              pattern: {\n                value:\n                  /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n                message: messages.wrongInput,\n              },\n            })}\n            error={!!errors.email}\n            helperText={errors.email?.message}\n          />\n          <TextField\n            required\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            variant=\"standard\"\n            fullWidth={true}\n            {...register('password', {\n              required: {\n                value: true,\n                message: messages.isRequired,\n              },\n            })}\n            error={!!errors.password}\n            helperText={errors.password?.message}\n          />\n          <Button type=\"submit\" fullWidth={true} variant=\"contained\">\n            Register user\n          </Button>\n        </Form>\n      </Box>\n    </PageContainer>\n  );\n};\n\n// RegisterPage.propTypes = {}\n\nexport default RegisterPage;\n","import { Box } from 'components/Box';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ children, autoComplete, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit} autoComplete={autoComplete}>\n      <Box display=\"flex\" flexDirection=\"column\" gridGap={4}>\n        {children}\n      </Box>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  children: PropTypes.any.isRequired,\n  autoComplete: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nexport default Form;\n","import { Box } from 'components/Box';\nimport React from 'react';\n\nexport const PageContainer = ({ children }) => {\n  return (\n    <Box\n      width=\"100vw\"\n      height=\"100vh\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      {children}\n    </Box>\n  );\n};\n"],"names":["dispatch","useDispatch","useForm","register","handleSubmit","errors","formState","reset","minWidth","display","flexDirection","gridGap","variant","component","autoComplete","noValidate","onSubmit","data","console","log","JSON","stringify","registerUser","required","id","label","fullWidth","value","message","messages","error","name","helperText","type","pattern","email","password","children","Box","PageContainer","width","height","alignItems","justifyContent"],"sourceRoot":""}