{"version":3,"file":"static/js/319.192eca41.chunk.js","mappings":"+TAkFA,UAvEkB,WAAO,IAAD,IAChBA,GAAWC,EAAAA,EAAAA,eACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAGIC,EAAQ,mCAAG,WAAMC,GAAN,iFACTX,GAASY,EAAAA,EAAAA,IAAMD,IAAOE,SADb,OAEfX,EAAS,aAETO,IAJe,2CAAH,sDAOd,OACE,SAAC,IAAD,WACE,UAAC,IAAD,CAAKK,SAAS,QAAQC,QAAQ,OAAOC,cAAc,SAASC,QAAS,EAArE,WACE,SAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,4BAGA,UAAC,IAAD,CAAMC,aAAa,KAAKC,YAAU,EAACX,SAAUJ,EAAaI,GAA1D,WACE,SAAC,KAAD,gBACEY,UAAQ,EACRC,GAAG,QACHC,KAAK,QACLC,MAAM,SACNP,QAAQ,WACRQ,WAAW,GACPrB,EAAS,QAAS,CACpBiB,SAAU,CACRK,OAAO,EACPC,QAASC,EAAAA,GAAAA,YAEXC,QAAS,CACPH,MACE,wEACFC,QAASC,EAAAA,GAAAA,eAff,IAkBEE,QAASxB,EAAOyB,MAChBC,WAAU,UAAE1B,EAAOyB,aAAT,aAAE,EAAcJ,YAE5B,SAAC,KAAD,gBACEN,UAAQ,EACRC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNP,QAAQ,WACRQ,WAAW,GACPrB,EAAS,WAAY,CACvBiB,SAAU,CACRK,OAAO,EACPC,QAASC,EAAAA,GAAAA,eAVf,IAaEE,QAASxB,EAAO2B,SAChBD,WAAU,UAAE1B,EAAO2B,gBAAT,aAAE,EAAiBN,YAE/B,SAAC,IAAD,CAAQJ,KAAK,SAASE,WAAW,EAAMR,QAAQ,YAA/C,0BAOT,C,wFC5DD,EAhBa,SAAC,GAA0C,IAAxCiB,EAAuC,EAAvCA,SAAUf,EAA6B,EAA7BA,aAAcV,EAAe,EAAfA,SACtC,OACE,iBAAMA,SAAUA,EAAUU,aAAcA,EAAxC,UACE,SAACgB,EAAA,EAAD,CAAKrB,QAAQ,OAAOC,cAAc,SAASC,QAAS,EAApD,SACGkB,KAIR,C,wFCTYE,EAAgB,SAAC,GAAkB,IAAhBF,EAAe,EAAfA,SAC9B,OACE,SAAC,IAAD,CACEG,MAAM,QACNC,OAAO,QACPxB,QAAQ,OACRyB,WAAW,SACXC,eAAe,SALjB,SAOGN,GAGN,C","sources":["Pages/LoginPage.jsx","components/Form/Form.jsx","components/common/PageContainer.jsx"],"sourcesContent":["import { Button, TextField, Typography } from '@mui/material';\nimport { Box } from 'components/Box';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { messages } from 'components/settings/settings';\nimport { PageContainer } from 'components/common/PageContainer';\nimport Form from 'components/Form';\nimport { login } from 'redux/auth/auth.operations';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const onSubmit = async data => {\n    await dispatch(login(data)).unwrap();\n    navigate('/contacts');\n\n    reset();\n  };\n\n  return (\n    <PageContainer>\n      <Box minWidth=\"280px\" display=\"flex\" flexDirection=\"column\" gridGap={4}>\n        <Typography variant=\"h2\" component=\"h2\">\n          Login, please\n        </Typography>\n        <Form autoComplete=\"on\" noValidate onSubmit={handleSubmit(onSubmit)}>\n          <TextField\n            required\n            id=\"email\"\n            type=\"email\"\n            label=\"E-mail\"\n            variant=\"standard\"\n            fullWidth={true}\n            {...register('email', {\n              required: {\n                value: true,\n                message: messages.isRequired,\n              },\n              pattern: {\n                value:\n                  /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n                message: messages.wrongInput,\n              },\n            })}\n            error={!!errors.email}\n            helperText={errors.email?.message}\n          />\n          <TextField\n            required\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            variant=\"standard\"\n            fullWidth={true}\n            {...register('password', {\n              required: {\n                value: true,\n                message: messages.isRequired,\n              },\n            })}\n            error={!!errors.password}\n            helperText={errors.password?.message}\n          />\n          <Button type=\"submit\" fullWidth={true} variant=\"contained\">\n            Login\n          </Button>\n        </Form>\n      </Box>\n    </PageContainer>\n  );\n};\n\nexport default LoginPage;\n","import { Box } from 'components/Box';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ children, autoComplete, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit} autoComplete={autoComplete}>\n      <Box display=\"flex\" flexDirection=\"column\" gridGap={4}>\n        {children}\n      </Box>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  children: PropTypes.any.isRequired,\n  autoComplete: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nexport default Form;\n","import { Box } from 'components/Box';\nimport React from 'react';\n\nexport const PageContainer = ({ children }) => {\n  return (\n    <Box\n      width=\"100vw\"\n      height=\"100vh\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      {children}\n    </Box>\n  );\n};\n"],"names":["dispatch","useDispatch","navigate","useNavigate","useForm","register","handleSubmit","errors","formState","reset","onSubmit","data","login","unwrap","minWidth","display","flexDirection","gridGap","variant","component","autoComplete","noValidate","required","id","type","label","fullWidth","value","message","messages","pattern","error","email","helperText","password","children","Box","PageContainer","width","height","alignItems","justifyContent"],"sourceRoot":""}